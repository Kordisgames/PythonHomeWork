Словари
В жизни нередко возникает необходимость сопоставить ключу значение. Например, в англо-русском словаре английскому слову сопоставляется одно или несколько русских слов. Здесь английское слово является ключом, а русское - значением. 

В языке Питон есть структура данных словарь, которая позволяет реализовывать подобные операции. При этом объекты-ключи уникальны и каждому из них сопоставлен некоторый объект-значение. Ограничения на ключи такие же, как на элементы множества, а вот значения могут быть и изменяемыми.

По-сути, словарь является множеством, где каждому элементу-ключу сопоставлен еще и объект-значение.

Создать словарь в исходном тексте программы можно записав в фигурных скобках пары ключ-значения через запятую, а внутри пары ключ отделяется от значения двоеточием:


countries = {'Russia' : 'Europe', 'Germany' : 'Europe', 'Australia' : 'Australia'}

Добавлять пары ключ значение в словарь очень просто: это делается по аналогии со списками: 

sqrs = {}
sqrs[1] = 1
sqrs[2] = 4
sqrs[10] = 100
print(sqrs)

Пустой словарь можно создать, написав пустые фигурные скобки (это будет словарь, а не множество).

Словарь также можно конструировать из других объектов с помощью функции dict:

myDict = dict([['key1', 'value1'], ('key2', 'value2')])
print(myDict)

На вход функции должен подавать iterable, каждый элемент которого, в свою очередь, является iterable строго с двумя элементами - ключом и значением.

Узнавать значение по ключу можно также с помощью записи ключа после имени словаря в квадратных скобках:


phones = {'police' : 102, 'ambulance' : 103, 'firefighters' : 101}
print(phones['police'])

Если такого ключа в словаре нет, то возникнет ошибка.

Удаление элемента из словаря делается специальной командой del. Это не функция, после слова del ставится пробел, затем пишется имя словаря, а затем, в квадратных скобках, удаляемый ключ:

phones = {'police' : 102, 'ambulance' : 103, 'firefighters' : 101}
del phones['police']
print(phones)

Проверка принадлежности ключа словарю осуществляется с помощью операции key in dictionary (точно также, как проверка принадлежности элемента множеству).

Словарь является iterable и возвращает ключи в случайном порядке. Например, такой код напечатает содержимое словаря:


phones = {'police' : 102, 'ambulance' : 103, 'firefighters' : 101}
for service in phones:
    print(service, phones[service])

Также существует метод items, который возвращает iterable, содержащий в себе кортежи ключ-значение для всевозможных ключей.

phones = {'police' : 102, 'ambulance' : 103, 'firefighters' : 101}
for service, phone in phones.items():
    print(service, phone)
